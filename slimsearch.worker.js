[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:$}=Object,{fromEntries:st}=Object,nt="ENTRIES",D="KEYS",W="VALUES",_="";class F{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(typeof t!="string")return n;const o=t.length+1,r=o+s,i=new Uint8Array(r*o).fill(s+1);for(let c=0;c<o;++c)i[c]=c;for(let c=1;c<r;++c)i[c*o]=c;return q(e,t,s,n,i,1,o,""),n},q=(e,t,s,n,o,r,i,c)=>{const h=r*i;t:for(const u of e.keys())if(u===_){const d=o[h-1];d<=s&&n.set(c,[e.get(u),d])}else{let d=r;for(let a=0;a<u.length;++a,++d){const m=u[a],g=i*d,y=g-i;let l=o[g];const f=Math.max(0,d-s-1),w=Math.min(i-1,d+s);for(let p=f;p<w;++p){const C=m!==t[p],S=o[y+p]+ +C,I=o[y+p+1]+1,x=o[g+p]+1,k=o[g+p+1]=Math.min(S,I,x);k<l&&(l=k)}if(l>s)continue t}q(e.get(u),t,s,n,o,d,i,c+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=M(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const i of o.keys())if(i!==_&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),o.get(i)),new z(c,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,rt(this._tree,t)}entries(){return new F(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=v(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return v(this._tree,t)?.has(_)??!1}keys(){return new F(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new F(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const M=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),M(e.get(n),t.slice(n.length),s);return s.push([e,t]),M(void 0,"",s)},v=(e,t)=>{if(t.length===0||!e)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return v(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const i=Math.min(s-n,r.length);let c=1;for(;c<i&&t[n+c]===r[c];)++c;const h=e.get(r);if(c===r.length)e=h;else{const u=new Map;u.set(r.slice(c),h),e.set(t.slice(n,n+c),u),e.delete(r),e=u}n+=c;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},rt=(e,t)=>{const[s,n]=M(e,t);if(s!==void 0){if(s.delete(_),s.size===0)A(n);else if(s.size===1){const[o,r]=s.entries().next().value;R(n,o,r)}}},A=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)A(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&R(e.slice(0,-1),n,o)}},R=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},ct=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ut="and_not",dt=(e,t)=>{e.includes(t)||e.push(t)},B=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,ht=()=>new Map,O=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,H={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),B(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:i,match:c}=t.get(n);B(o.terms,i),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,c)})}return s},[ut]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},lt=(e,t,s,n,o,r)=>{const{k:i,b:c,d:h}=r;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-c+c*n/o)))},ft=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),J=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},at=(e,t,s,n)=>{if(!e._index.has(n)){J(e,s,t,n);return}const o=e._index.fetch(n,ht),r=o.get(t),i=r?.get(s);!r||typeof i>"u"?J(e,s,t,n):i<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,i-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ct),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},Y={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},K={minDirtFactor:.1,minDirtCount:20},yt={..._t,...K},U=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const i=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},Q=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();if(!(s in H))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(H[s])},T=(e,t,s,n,o,r,i,c,h,u=new Map)=>{if(r==null)return u;for(const d of Object.keys(i)){const a=i[d],m=e._fieldIds[d],g=r.get(m);if(g==null)continue;let y=g.size;const l=e._avgFieldLength[m];for(const f of g.keys()){if(!e._documentIds.has(f)){at(e,m,f,s),y-=1;continue}const w=c?c(e._documentIds.get(f),s,e._storedFields.get(f)):1;if(!w)continue;const p=g.get(f),C=e._fieldLength.get(f)[m],S=lt(p,y,e._documentCount,C,l,h),I=n*o*a*w*S,x=u.get(f);if(x){x.score+=I,dt(x.terms,t);const k=G(x.match,s);k?k.push(d):x.match[s]=[d]}else u.set(f,{score:I,terms:[t],match:{[s]:[d]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:h}=n,{fuzzy:u,prefix:d}={...Y.weights,...i},a=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,a,o,r,h);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(c,Math.round(t.term.length*l)):l;f&&(y=e._index.fuzzyGet(t.term,f))}if(g)for(const[l,f]of g){const w=l.length-t.term.length;if(!w)continue;y?.delete(l);const p=d*l.length/(l.length+.3*w);T(e,t.term,l,p,t.termBoost,f,o,r,h,m)}if(y)for(const l of y.keys()){const[f,w]=y.get(l);if(!w)continue;const p=u*l.length/(l.length+w);T(e,t.term,l,p,t.termBoost,f,o,r,h,m)}return m},X=(e,t,s={})=>{if(t===U)return wt(e,s);if(typeof t!="string"){const d={...s,...t,queries:void 0},a=t.queries.map(m=>X(e,m,d));return Q(a,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,i={tokenize:n,processTerm:o,...r,...s},{tokenize:c,processTerm:h}=i,u=c(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>xt(e,d,i));return Q(u,i.combineWith)},Z=(e,t,s={})=>{const{searchOptions:n}=e._options,o={...n,...s},r=X(e,t,s),i=[];for(const[c,{score:h,terms:u,match:d}]of r){const a=u.length||1,m={id:e._documentIds.get(c),score:h*a,terms:Object.keys(d),queryTerms:u,match:d};Object.assign(m,e._storedFields.get(c)),(o.filter==null||o.filter(m))&&i.push(m)}return t===U&&o.boostDocument==null||i.sort(P),i},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:i}of Z(e,t,s)){const c=i.join(" "),h=n.get(c);h!=null?(h.score+=r,h.count+=1):n.set(c,{score:r,terms:i,count:1})}const o=[];for(const[r,{score:i,terms:c,count:h}]of n)o.push({suggestion:r,terms:c,score:i/h});return o.sort(P),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...Y,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=K,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,i]of n)o[r]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const kt=e=>new bt(e),It=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=kt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=s,c._avgFieldLength=n,c._dirtCount=o??0,c._index=new z,c},Mt=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,i=It(e,t);i._documentIds=O(n),i._fieldLength=O(o),i._storedFields=O(r);for(const[c,h]of i._documentIds)i._idToShortId.set(h,c);for(const[c,h]of s){const u=new Map;for(const d of Object.keys(h))u.set(parseInt(d,10),O(h[d]));i._index.set(c,u)}return i},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,i=0;const c=(u,d=!1)=>{let a;i===0?a=u.length>20?`… ${u.slice(-20)}`:u:d?a=u.length+i>100?`${u.slice(0,100-i)}… `:u:a=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,a&&o.push(a),i+=a.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,r);if(h===-1)return null;for(;h>=0;){const u=h+n.length;if(c(e.slice(r,h)),r=u,i>100)break;h=s.indexOf(n,r)}return i<100&&c(e.slice(r),!0),o},Ot=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ct=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),tt=(e,t,s={})=>{const n={};return Z(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:i,score:c}=o,h=r.includes("@"),u=r.includes("#"),[d,a]=r.split(/[#@]/),m=Number(d),g=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(w=>!w.includes(l))),{contents:y}=n[m]??={title:"",contents:[]};if(h)y.push([{type:"customField",id:m,index:a,display:g.map(l=>o.c.map(f=>V(f,l))).flat().filter(l=>l!==null)},c]);else{const l=g.map(f=>V(o.h,f)).filter(f=>f!==null);if(l.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:a},display:l},c]),"t"in o&&o.t)for(const f of o.t){const w=g.map(p=>V(f,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:a},display:w},c])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Ot(o,r):Ct(o,r)).map(([o,{title:r,contents:i}])=>{if(!r){const c=it(t,o);c&&(r=c.h)}return{title:r,contents:i.map(([c])=>c)}})},et=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},St=st($(JSON.parse("{\"/\":{\"documentCount\":68,\"nextId\":68,\"documentIds\":{\"0\":\"0\",\"1\":\"2\",\"2\":\"2#简介\",\"3\":\"2#目录\",\"4\":\"3\",\"5\":\"4\",\"6\":\"5\",\"7\":\"5#正定矩阵与半正定矩阵的定义\",\"8\":\"5#正定矩阵的性质\",\"9\":\"5#半正定矩阵的性质\",\"10\":\"5#实际问题中的应用\",\"11\":\"5#小结\",\"12\":\"5#问题-1-的答案\",\"13\":\"5#基于问题假设的分析\",\"14\":\"5#符号的证明。\",\"15\":\"5#分析边界条件\",\"16\":\"5#推导-的值\",\"17\":\"5#结论\",\"18\":\"5#计算\",\"19\":\"5#_1-问题分析\",\"20\":\"5#_2-使用反函数求导法则\",\"21\":\"5#_3-设定关系并求导\",\"22\":\"5#_4-结论\",\"23\":\"5#总结\",\"24\":\"6\",\"25\":\"7\",\"26\":\"8\",\"27\":\"9\",\"28\":\"10\",\"29\":\"11\",\"30\":\"12\",\"31\":\"13\",\"32\":\"14\",\"33\":\"15\",\"34\":\"16\",\"35\":\"17\",\"36\":\"18\",\"37\":\"19\",\"38\":\"20\",\"39\":\"21\",\"40\":\"23\",\"41\":\"24\",\"42\":\"25\",\"43\":\"26\",\"44\":\"28\",\"45\":\"29\",\"46\":\"30\",\"47\":\"31\",\"48\":\"32\",\"49\":\"32#_1-1-三角形方程的解法\",\"50\":\"32#_1-2-gauss变换与gauss消元法\",\"51\":\"32#_1-3-选主元三角分解\",\"52\":\"32#_1-4-平方根法-cholesky分解\",\"53\":\"32#_1-5-拓展\",\"54\":\"33\",\"55\":\"35\",\"56\":\"35#运算规则\",\"57\":\"35#性质\",\"58\":\"35#解题技巧\",\"59\":\"35#行列式、全排列、对换和逆序数\",\"60\":\"37\",\"61\":\"38\",\"62\":\"39\",\"63\":\"40\",\"64\":\"41\",\"65\":\"42\",\"66\":\"43\",\"67\":\"44\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,18],\"1\":[1],\"2\":[1,2],\"3\":[1,6],\"4\":[1],\"5\":[1],\"6\":[1,6],\"7\":[1,26],\"8\":[1,33],\"9\":[1,18],\"10\":[1,18],\"11\":[1,16],\"12\":[3],\"13\":[1,38],\"14\":[2,57],\"15\":[1,14],\"16\":[2,34],\"17\":[1,20],\"18\":[1],\"19\":[2,11],\"20\":[2,15],\"21\":[2,28],\"22\":[2,9],\"23\":[1,9],\"24\":[1,10],\"25\":[1,1],\"26\":[1,1],\"27\":[1,1],\"28\":[1,1],\"29\":[1,1],\"30\":[1,1],\"31\":[1,1],\"32\":[1,1],\"33\":[1,1],\"34\":[1,1],\"35\":[1,1],\"36\":[1,1],\"37\":[1,1],\"38\":[1,1],\"39\":[1,60],\"40\":[1,1],\"41\":[1,2],\"42\":[1,1],\"43\":[1,2],\"44\":[1,7],\"45\":[1,11],\"46\":[1,12],\"47\":[1,12],\"48\":[4],\"49\":[2,14],\"50\":[4,26],\"51\":[3,24],\"52\":[5,6],\"53\":[3,10],\"54\":[1,12],\"55\":[1,18],\"56\":[1,22],\"57\":[1,1],\"58\":[1,4],\"59\":[3,126],\"60\":[1,3],\"61\":[1],\"62\":[1],\"63\":[1],\"64\":[1],\"65\":[1],\"66\":[1],\"67\":[1]},\"averageFieldLength\":[1.3676470588235294,14.155960648148147],\"storedFields\":{\"0\":{\"h\":\"\",\"t\":[\"Question\",\"这是一个问题。\",\"Theorem\",\"Definition\",\"Lemma\",\"Exercise\",\"Todo\",\"Example\",\"这是一个例子。\",\"Warning\",\"这是一个警告。\",\"Tip\",\"这是一个提示。\",\"Quote\",\"这是一个引用。\",\"Info\",\"这是一个信息。\"]},\"1\":{\"h\":\"\"},\"2\":{\"h\":\"简介\",\"t\":[\"基于Obsidian建立个人的数学知识库！\"]},\"3\":{\"h\":\"目录\",\"t\":[\"Home（本地Obsidian仓库专用）\",\"Example（笔记示例）\",\"线性代数\",\"行列式\"]},\"4\":{\"h\":\"\"},\"5\":{\"h\":\"\"},\"6\":{\"h\":\"\",\"t\":[\"正定矩阵和半正定矩阵是线性代数和优化中的重要概念，它们具有一些非常有用的性质和结论，特别是在最优化问题中。让我详细解释一下它们的定义、性质以及这些性质如何在实际问题中被利用。\"]},\"7\":{\"h\":\"正定矩阵与半正定矩阵的定义\",\"t\":[\"正定矩阵：一个 n×n 的实对称矩阵 A 被称为正定矩阵，如果对于所有非零向量 x∈Rn，都有：\",\"xTAx>0\",\"这意味着任何非零向量 x 乘以 A 后，再与 x 内积，结果总是正数。\",\"半正定矩阵：一个 n×n 的实对称矩阵 A 被称为半正定矩阵，如果对于所有向量 x∈Rn，都有：\",\"xTAx≥0\",\"这里允许 xTAx 为零，但它不能为负数。\"]},\"8\":{\"h\":\"正定矩阵的性质\",\"t\":[\"唯一性：如果 A 是正定的，那么线性方程组 Ax=b 有唯一解。这是因为正定矩阵总是可逆的（不存在零特征值），其逆矩阵也是正定的。\",\"特征值：正定矩阵的所有特征值都是正数。半正定矩阵的所有特征值都是非负数。\",\"矩阵的平方根：如果 A 是正定矩阵，那么存在一个唯一的正定矩阵 B 使得 B2=A，这个矩阵 B 称为 A 的平方根。\",\"最优化中的应用：在二次型最小化问题中，如果二次型的系数矩阵是正定的，那么目标函数具有唯一的最小值。具体到问题中的损失函数 L(x)=21​xTWTWx−xTWTb+const，如果 WTW 是正定的，那么该损失函数具有唯一的最小值。\"]},\"9\":{\"h\":\"半正定矩阵的性质\",\"t\":[\"可能的多解性：如果 A 是半正定的，那么线性方程组 Ax=b 可能有无穷多解（当 A 不是满秩的情况）。\",\"特征值：半正定矩阵的特征值是非负的，这意味着它的最小特征值是零或正数。\",\"最优化中的应用：在最小化一个以半正定矩阵为系数的二次型函数时，如果矩阵是半正定但不是正定的，最小值可能不唯一，且可能出现在一个子空间上。\"]},\"10\":{\"h\":\"实际问题中的应用\",\"t\":[\"在优化问题中，正定和半正定矩阵的性质决定了目标函数的形状和解的唯一性：\",\"正定矩阵的作用：在二次型最优化问题中，如 minx​21​xTAx+bTx+c，如果 A 是正定矩阵，那么目标函数是一个严格凸函数，只有一个全局最小值。\",\"半正定矩阵的作用：如果 A 是半正定矩阵，那么目标函数是凸的，但可能存在平坦区域，这些区域会导致多个最小值，即解可能不唯一。\"]},\"11\":{\"h\":\"小结\",\"t\":[\"正定矩阵：确保唯一解和严格凸性。\",\"半正定矩阵：保证凸性，但解可能不唯一。\",\"这些性质在优化问题、稳定性分析、机器学习（如支持向量机、线性回归）中广泛应用。正是因为这些性质，在线性方程组的解、优化问题的最小值以及特征值问题中，正定和半正定矩阵的概念非常重要。\"]},\"12\":{\"h\":\"问题 1 的答案\"},\"13\":{\"h\":\"基于问题假设的分析\",\"t\":[\"假设方程 (1) 中的偏微分方程为 u(x,y)=g(x)h(y)。 然后计算 u 的偏导数，并将其代入原方程。\",\"∂x2∂2u​=g′′(x)h(y),∂y2∂2u​=g(x)h′′(y)\",\"将这些内容代入方程（1）可以得到\",\"g′′(x)h(y)+g(x)h′′(y)=0\",\"如果h(y)和g(x)都不为零，则用g(x)h(y)除以上式。\",\"g(x)g′′(x)​+h(y)h′′(y)​=0\",\"在这里，由于 g(x)g′′(x)​=−h(y)h′′(y)​ 成立，所以两边作为 x 或 y 的函数都是独立的，并且可以用常数 λ 表示如下\",\"g(x)g′′(x)​=λ,h(y)h′′(y)​=−λ\"]},\"14\":{\"h\":\"符号的证明。\",\"t\":[\"因为 u(x,y) 满足边界条件 u(0,y)=u(2,y)=0，所以考虑 g(x)、\",\"g(0)=0,g(2)=0\",\"对于这样的g(x)有一个非三维解（一个g(x)=0 的函数），其形式与特征值问题中经常出现的形式相同、\",\"g′′(x)=λg(x)\",\"我们需要考虑的形式是 其中 λ 为正值，g(x) 的解是指数递增或递减函数，不满足边界条件 g(0)=g(2)=0。 因此，λ 必须是负值。\",\"如果 λ<0，让 λ=−μ2 （μ>0）\",\"g(x)=Acos(μx)+Bsin(μx)\",\"这意味着 A=0 和 mu=2nπ​（其中 n 为整数）必须满足边界条件。 除非 λ 为负数，否则这是不可行的。\",\"由上可知，λ 必须为负数。\",\"为了解释为什么可以从 u(x,y) 的边界条件推导出 g(x) 在 x=0 和 x=2 时的值，我们需要回顾一下边界条件和我们对 u(x,y)=g(x)h(y) 的假设。\"]},\"15\":{\"h\":\"分析边界条件\",\"t\":[\"根据题目，边界条件是：\",\"u(0,y)=0 对于所有的 0≤y≤3\",\"u(2,y)=0 对于所有的 0≤y≤3\",\"同时假设 u(x,y)=g(x)h(y)。\"]},\"16\":{\"h\":\"推导 的值\",\"t\":[\"由于 u(0,y)=g(0)h(y)=0 对所有 y 成立，我们首先考虑 h(y) 不恒等于零（如果 h(y)≡0，那么 u(x,y) 就恒为零，与题目的条件“u(x,y) 非恒等于零”矛盾）。\",\"既然 h(y) 在至少一点（或者更多点）不为零，那么要使 u(0,y)=0 对所有 y 成立，g(0) 必须等于 0。同样的逻辑也适用于 x=2 的情况，即 u(2,y)=g(2)h(y)=0。所以，g(2) 也必须等于 0。\"]},\"17\":{\"h\":\"结论\",\"t\":[\"这样我们就可以根据 u(x,y)=g(x)h(y) 的假设，直接从 u(x,y) 的边界条件得到 g(x) 在特定位置（x=0 和 x=2）的值。这种方法有效是因为我们考虑了 h(y) 非零的情况，并推理出 g(x) 必须在这些点为零以满足边界条件。\"]},\"18\":{\"h\":\"计算\"},\"19\":{\"h\":\"1. 问题分析\",\"t\":[\"我们需要计算 dxd​logx​(y)，其中 logx​(y) 表示以 x 为底 y 的对数，即满足以下关系的函数：\",\"logx​(y)=z当且仅当xz=y\"]},\"20\":{\"h\":\"2. 使用反函数求导法则\",\"t\":[\"反函数求导法则指出，如果 y=f(x)，并且 f 在其定义域内可微且严格单调，那么其反函数 x=f−1(y) 的导数为：\",\"dyd​f−1(y)=f′(x)1​其中x=f−1(y)\"]},\"21\":{\"h\":\"3. 设定关系并求导\",\"t\":[\"考虑对数的定义，我们可以表示 logx​(y) 为：\",\"z=logx​(y)⟹xz=y\",\"将此方程两边对 x 求导：\",\"dxd​(xz)=dxd​(y)\",\"应用隐函数求导法和链式法则，计算左边的导数：\",\"z⋅xz−1+xz⋅dxdz​⋅ln(x)=0\",\"整理得到：\",\"xz⋅dxdz​⋅ln(x)=−z⋅xz−1\",\"dxdz​=xln(x)−z​\",\"注意到 z=logx​(y)，我们得到：\",\"dxd​logx​(y)=xln(x)−logx​(y)​\"]},\"22\":{\"h\":\"4. 结论\",\"t\":[\"因此，导数 dxd​logx​(y) 可以表示为：\",\"dxd​logx​(y)=xln(x)−logx​(y)​\"]},\"23\":{\"h\":\"总结\",\"t\":[\"在计算 dxd​logx​(y) 时，可以有效地使用反函数求导法则，通过隐函数和链式法则推导出结果。这一方法对多步计算特别有用，尤其是在涉及复合函数的情况下。\"]},\"24\":{\"h\":\"目录\",\"t\":[\"LIST WHERE contains(file.folder,this.file.folder) AND contains(file.name,\\\"--\\\") SORT chapter\"]},\"25\":{\"h\":\"\",\"t\":[\"Abstract\"]},\"26\":{\"h\":\"\",\"t\":[\"Bug\"]},\"27\":{\"h\":\"\",\"t\":[\"ChatGPT\"]},\"28\":{\"h\":\"\",\"t\":[\"Danger\"]},\"29\":{\"h\":\"\",\"t\":[\"Example\"]},\"30\":{\"h\":\"\",\"t\":[\"Failure\"]},\"31\":{\"h\":\"\",\"t\":[\"Info\"]},\"32\":{\"h\":\"\",\"t\":[\"Note\"]},\"33\":{\"h\":\"\",\"t\":[\"Question\"]},\"34\":{\"h\":\"\",\"t\":[\"Quote\"]},\"35\":{\"h\":\"\",\"t\":[\"Success\"]},\"36\":{\"h\":\"\",\"t\":[\"Tip\"]},\"37\":{\"h\":\"\",\"t\":[\"Todo\"]},\"38\":{\"h\":\"\",\"t\":[\"Warning\"]},\"39\":{\"h\":\"更多\",\"t\":[\"Note\",\"> [!note] >\",\"Abstract\",\"> [!abstract] >\",\"Aliases: summary, tldr\",\"Info\",\"> [!info] >\",\"Todo\",\"> [!todo] >\",\"Tip\",\"> [!tip] >\",\"Aliases: hint, important\",\"Success\",\"> [!success] >\",\"Aliases: check, done\",\"Question\",\"> [!question] >\",\"Aliases: help, faq\",\"Warning\",\"> [!warning] >\",\"Aliases: caution, attention\",\"Failure\",\"> [!failure] >\",\"Aliases: fail, missing\",\"Danger\",\"> [!danger] >\",\"Alias: error\",\"Bug\",\"> [!bug] >\",\"Example\",\"> [!example] >\",\"Quote\",\"> [!quote] >\",\"Library/Science/Math/_assets_/Callouts/Callouts-BugLibrary/Science/Math/_assets_/Callouts/Callouts-AbstractLibrary/Science/Math/_assets_/Callouts/Callouts-ChatGPTLibrary/Science/Math/_assets_/Callouts/Callouts-ExampleLibrary/Science/Math/_assets_/Callouts/Callouts-DangerLibrary/Science/Math/_assets_/Callouts/Callouts-FailureLibrary/Science/Math/_assets_/Callouts/Callouts-InfoLibrary/Science/Math/_assets_/Callouts/Callouts-NoteLibrary/Science/Math/_assets_/Callouts/Callouts-QuestionLibrary/Science/Math/_assets_/Callouts/Callouts-QuoteLibrary/Science/Math/_assets_/Callouts/Callouts-SuccessLibrary/Science/Math/_assets_/Callouts/Callouts-TipsLibrary/Science/Math/_assets_/Callouts/Callouts-TodoLibrary/Science/Math/_assets_/Callouts/Callouts-Warning\"]},\"40\":{\"h\":\"\",\"t\":[\" [[]]\"]},\"41\":{\"h\":\"\",\"t\":[\"定义\",\"Example\"]},\"42\":{\"h\":\"\",\"t\":[\"定义\"]},\"43\":{\"h\":\"\",\"t\":[\"定义\",\"Example\"]},\"44\":{\"h\":\"\",\"t\":[\"list from #公式 sort file.path, file.name\"]},\"45\":{\"h\":\"\",\"t\":[\"table from \\\"Other/例题\\\" where contains(file.name,\\\"82-sc-\\\") sort file.name\"]},\"46\":{\"h\":\"\",\"t\":[\"list where author = null AND !contains(file.path,\\\"Other\\\") AND !contains(file.path,\\\"_assets_\\\")\"]},\"47\":{\"h\":\"目录\",\"t\":[\"LIST WHERE file.folder=this.file.folder AND contains(dlink,link(this.file.name))\"]},\"48\":{\"h\":\"Ch1 线性方程组的直接解法(Ax=b)\"},\"49\":{\"h\":\"1.1 三角形方程的解法\",\"t\":[\"下三角形：前代法 \",\"因为第一行只有a11​=0，所以先解出x1​；\",\"再将x1​代入第二行，解出x2​。重复以上步骤直至解出x。\",\"上三角形：回代法 \",\"因为最后一行只有ann​=0，所以先解出xn​；\",\"再将xn​代入倒数第二行，解出xn−1​。重复以上步骤直至解出x。\"]},\"50\":{\"h\":\"1.2 变换与 消元法\",\"t\":[\"Gauss变换的形式\",\"Lk​=​1​⋱​1−lk+1,k​1⋮−ln,k​​⋱​1​​∈Rn×n\",\"Gauss变换\",\"Gauss变换可以看作一个算子。一个特殊的对应的Gauss变换作用于矩阵A，可以将A的第k列转化为[x1​,x2​,⋯,xk​,0,⋯,0]T.\",\"矩阵A的三角分解： \",\"令L=(Ln−1​Ln−2​⋯L1​)−1,U=A(n−1)，则A=LU；\",\"其中L是下三角矩阵，U是上三角矩阵\",\"三角分解之后，Ax=b→LUx=b→Ly=b,Ux=y\"]},\"51\":{\"h\":\"1.3 选主元三角分解\",\"t\":[\"全主元消元法 \",\"U=Ln−1​Pn−1​Ln−2​Pn−2​⋯L1​P1​AQ1​⋯Qn−1​，其中Pi​,Qi​均为置换矩阵，Li​为Gauss变换。\",\"也就是说，从正式开始消元之前，就已经选过一轮全主元了。\",\"列主元消元法 \",\"只在当前主元这一列的下方选，如现在主元是akk​，那么就是从{aik​:k≤i≤n}中选出绝对值最大的一个，然后进行行交换——也就是说，没有全主元方法中的右端的Qi​了。\",\"也是从第一步消元前就先选了一轮了。\",\"选主元消去\",\"选主元消去是建立在Gauss消元法的基础上的：它在每一次Gauss消去之后，通过对比主元与其他元间的大小进而交换对应的行与列，来确保A的所有顺序主子式均非零。\"]},\"52\":{\"h\":\"1.4 平方根法(Cholesky分解)\",\"t\":[\"Ax=b→A=LLT→LLTx=b→Ly=b,LTx=y\",\"改进的平方根法：A=LDLT，不需要开方运算。\"]},\"53\":{\"h\":\"1.5 拓展\",\"t\":[\"三对角矩阵→带状矩阵 \",\"追赶法求解三对角矩阵\",\"Doolittle分解，Courant分解\",\"求逆的方法：Gauss-Jordan消元，构建增广矩阵（将两个矩阵拼起来）。\"]},\"54\":{\"h\":\"目录\",\"t\":[\"LIST WHERE file.folder=this.file.folder AND contains(dlink,link(this.file.name))\"]},\"55\":{\"h\":\"\",\"t\":[\"行列式是一个数，它与一个方阵相关联，并用于描述该方阵的一些性质。 给定一个 n×n 的方阵A，行列式可以表示为det(A)或|A|。 行列式的定义可以通过递归地将方阵拆分为更小的子方阵来得到。\",\"对于2 x 2的方阵：\",\"A=[ac​bd​]\",\"行列式\",\"det(A)=​ac​bd​​=ad−bc\"]},\"56\":{\"h\":\"运算规则\",\"t\":[\"整行/列加减,值不变:\",\"​x11​x21​​x12​x22​​​=​x11​x21​​x11​+x12​x21​+x22​​​\",\"整行/列数乘, 值不变(可由前一项规则加减自己推导得到)\",\"c⋅​x11​x21​​x12​x22​​​=​c⋅x11​c⋅x21​​x12​x22​​​\",\"交换行/列, 改变正负\",\"​x11​x21​​x12​x22​​​=−​x21​x11​​x22​x12​​​\",\"若有两行/列成比例，即对应矩阵不满秩，则行列式＝0\",\"​x11​x21​​x12​x22​​​=​x11​x21​​c⋅x11​c⋅x21​​​=0\",\"按行列加法拆分\",\"​x11​+ax21​+c​x12​+bx22​+d​​=​x11​x21​​x12​x22​​​+​ac​x12​x22​​​+​x11​x21​​bd​​+​ac​bd​​\",\"拉普拉斯展开法降阶(x1n​ 不全为0也可以用哦)\",\"​x11​x21​x31​​x12​x22​x32​​x13​x23​x33​​​=x11​​x22​x32​​x23​x33​​​−x12​​x21​x31​​x23​x33​​​+x13​​x21​x31​​x22​x32​​​\"]},\"57\":{\"h\":\"性质\",\"t\":[\"行列式性质\"]},\"58\":{\"h\":\"解题技巧\",\"t\":[\"凑出相同行列\",\"提取公因数\",\"高阶优先降阶\",\"降阶善用立方差公式\"]},\"59\":{\"h\":\"行列式、全排列、对换和逆序数\",\"t\":[\"关键字抽取：\",\"∣A∣=∣aij​∣=​a11​a21​⋮an1​​a12​a22​⋮an2​​………​a1n​a2n​⋮ann​​​=∑(−1)ta1p1​​a2p2​​⋯anpn​​\",\"∣A∣=∑(−1)ta1p1​​a2p2​​…anpn​​=(3)(−1)k1​(2)​a11​a22​…ann​​(1)​+⋯+(−1)k2a12​a2n​…an1​​​\",\"Question\",\"每一项的元素如何取？\",\"系数是+1，还是-1？\",\"一共有多少项？\",\"p1​p2​…pn​ 是数字1…n 的一个全排列。\",\"Quote\",\"全排列，就是不遗漏，不重复的将所有数字排在一起。\",\"从n个不同元素中任取m(m≤n)个元素，按照一定的顺序排列起来，叫做从 n 个不同元素中取出 m 个元素的一个排列。当 m=n 时所有的排列情况叫全排列。\",\"公式：全排列数 f(n)=n! (定义 0!=1 )\",\"2p1​​1p2​​4p3​​5p4​​3p5​​\",\"（1）一个全排列，对应了一组 a1p1​​a2p2​​a3p3​​\",\"21453⟹a12​a21​a34​a45​a53​\",\"（2）系数到底是正数还是负数，取决于幂指数的值，而它可以由全排列决定。全排列就能决定系数是+1，还是-1\",\"21453⟹(−1)ta12​a21​a34​a45​a53​\",\"幂指数的值被称为逆序数。就是用相邻对换的方式，将全排列，变为顺序排列所用的次数。\",\"下面，我们就来计算一下全排列21453的逆序，首先将前两个位置上的数2 1进行比较，可以看到，前面的数比后面的数大，因此需要交换顺序，此时交换次数为1，寻找一对逆序数，完成交换，交换数+1，直到变成顺序排列。发送的总交换次数为逆序数。（冒泡排序？）\",\"一个全排列 21453⟹a12​a21​a34​a45​a53​ ； 除此以外，也对应了一个逆序数。\",\"123⟹(−1)0a11​a22​a33​\",\"从而确定系数是+1还是-1。\",\"3!\\\\left\\\\{ \\\\begin{gathered} \\\\begin{matrix}{1}&{2}&{3}& _{t=0}\\\\end{matrix} \\\\Longrightarrow(-1)^0a_{11}a_{22}a_{33} \\\\\\\\ \\\\begin{matrix}{1}&{3}&{2}& _{t=1}\\\\end{matrix} \\\\Longrightarrow(-1)^1a_{11}a_{23}a_{32} \\\\\\\\ 2\\\\quad1\\\\quad3\\\\quad _{t=1} \\\\Longrightarrow(-1)^1a_{12}a_{21}a_{33} \\\\\\\\ \\\\begin{matrix}{2}&{3}&{1}& _{t=2}\\\\\\\\\\\\end{matrix} \\\\Longrightarrow(-1)^2a_{12}a_{23}a_{31} \\\\\\\\ \\\\begin{matrix}{3}&{1}&{2}& _{t=2}\\\\\\\\\\\\end{matrix} \\\\Longrightarrow(-1)^2a_{13}a_{21}a_{32} \\\\\\\\ \\\\begin{matrix}{3}&{2}&{1}& _{t=3}\\\\\\\\\\\\end{matrix} \\\\Longrightarrow(-1)^3a_{13}a_{22}a_{31} \\\\end{gathered} \\\\right. \",\"（3）而所有全排列的个数，就是多项式的项数、123三个数的全排列，就有 3! ，6个。\",\"(−1)0a11​a22​a33​(−1)1a11​a23​a32​(−1)1a12​a21​a33​$−1)2a12​a23​a31​(−1)2a13​a21​a32​(−1)3a13​a22​a31​​\",\"将此各项加起来，其结果就是 ∣A∣3​ 三阶行列式的值.\"]},\"60\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"61\":{\"h\":\"Assets\"},\"62\":{\"h\":\"线性代数\"},\"63\":{\"h\":\"Callouts\"},\"64\":{\"h\":\"Template\"},\"65\":{\"h\":\"Dataview查询\"},\"66\":{\"h\":\"数值线性代数\"},\"67\":{\"h\":\"行列式\"}},\"dirtCount\":0,\"index\":[[\"数值线性代数\",{\"0\":{\"66\":1}}],[\"∣a∣3​\",{\"1\":{\"59\":1}}],[\"∣a∣=∑\",{\"1\":{\"59\":1}}],[\"∣a∣=∣aij​∣=​a11​a21​⋮an1​​a12​a22​⋮an2​​\",{\"1\":{\"59\":1}}],[\"6个\",{\"1\":{\"59\":1}}],[\"而所有全排列的个数\",{\"1\":{\"59\":1}}],[\"而它可以由全排列决定\",{\"1\":{\"59\":1}}],[\"right\",{\"1\":{\"59\":1}}],[\"^3a\",{\"1\":{\"59\":1}}],[\"^2a\",{\"1\":{\"59\":2}}],[\"^1a\",{\"1\":{\"59\":2}}],[\"^0a\",{\"1\":{\"59\":1}}],[\"冒泡排序\",{\"1\":{\"59\":1}}],[\"发送的总交换次数为逆序数\",{\"1\":{\"59\":1}}],[\"直到变成顺序排列\",{\"1\":{\"59\":1}}],[\"直接从\",{\"1\":{\"17\":1}}],[\"交换数+1\",{\"1\":{\"59\":1}}],[\"交换行\",{\"1\":{\"56\":1}}],[\"完成交换\",{\"1\":{\"59\":1}}],[\"寻找一对逆序数\",{\"1\":{\"59\":1}}],[\"此时交换次数为1\",{\"1\":{\"59\":1}}],[\"前面的数比后面的数大\",{\"1\":{\"59\":1}}],[\"前代法\",{\"1\":{\"49\":1}}],[\"首先将前两个位置上的数2\",{\"1\":{\"59\":1}}],[\"下面\",{\"1\":{\"59\":1}}],[\"下三角形\",{\"1\":{\"49\":1}}],[\"变为顺序排列所用的次数\",{\"1\":{\"59\":1}}],[\"变换与\",{\"0\":{\"50\":1}}],[\"幂指数的值被称为逆序数\",{\"1\":{\"59\":1}}],[\"取决于幂指数的值\",{\"1\":{\"59\":1}}],[\"系数到底是正数还是负数\",{\"1\":{\"59\":1}}],[\"系数是+1\",{\"1\":{\"59\":1}}],[\"个不同元素中取出\",{\"1\":{\"59\":1}}],[\"个元素的一个排列\",{\"1\":{\"59\":1}}],[\"个元素\",{\"1\":{\"59\":1}}],[\"叫做从\",{\"1\":{\"59\":1}}],[\"按照一定的顺序排列起来\",{\"1\":{\"59\":1}}],[\"按行列加法拆分\",{\"1\":{\"56\":1}}],[\"从而确定系数是+1还是\",{\"1\":{\"59\":1}}],[\"从n个不同元素中任取m\",{\"1\":{\"59\":1}}],[\"从正式开始消元之前\",{\"1\":{\"51\":1}}],[\"pn​\",{\"1\":{\"59\":1}}],[\"p1​p2​\",{\"1\":{\"59\":1}}],[\"path\",{\"1\":{\"44\":1,\"46\":2}}],[\"一共有多少项\",{\"1\":{\"59\":1}}],[\"一个全排列\",{\"1\":{\"59\":2}}],[\"一个特殊的对应的gauss变换作用于矩阵a\",{\"1\":{\"50\":1}}],[\"一个g\",{\"1\":{\"14\":1}}],[\"一个\",{\"1\":{\"7\":2}}],[\"还是\",{\"1\":{\"59\":2}}],[\"每一项的元素如何取\",{\"1\":{\"59\":1}}],[\"关键字抽取\",{\"1\":{\"59\":1}}],[\"全排列就能决定系数是+1\",{\"1\":{\"59\":1}}],[\"全排列数\",{\"1\":{\"59\":1}}],[\"全排列\",{\"0\":{\"59\":1},\"1\":{\"59\":1}}],[\"全主元消元法\",{\"1\":{\"51\":1}}],[\"降阶善用立方差公式\",{\"1\":{\"58\":1}}],[\"高阶优先降阶\",{\"1\":{\"58\":1}}],[\"提取公因数\",{\"1\":{\"58\":1}}],[\"凑出相同行列\",{\"1\":{\"58\":1}}],[\"解题技巧\",{\"0\":{\"58\":1}}],[\"解出xn−1​\",{\"1\":{\"49\":1}}],[\"解出x2​\",{\"1\":{\"49\":1}}],[\"性质\",{\"0\":{\"57\":1}}],[\"性质以及这些性质如何在实际问题中被利用\",{\"1\":{\"6\":1}}],[\"拉普拉斯展开法降阶\",{\"1\":{\"56\":1}}],[\"若有两行\",{\"1\":{\"56\":1}}],[\"改变正负\",{\"1\":{\"56\":1}}],[\"改进的平方根法\",{\"1\":{\"52\":1}}],[\"值不变\",{\"1\":{\"56\":2}}],[\"列成比例\",{\"1\":{\"56\":1}}],[\"列\",{\"1\":{\"56\":1}}],[\"列数乘\",{\"1\":{\"56\":1}}],[\"列加减\",{\"1\":{\"56\":1}}],[\"列主元消元法\",{\"1\":{\"51\":1}}],[\"整行\",{\"1\":{\"56\":2}}],[\"整理得到\",{\"1\":{\"21\":1}}],[\"运算规则\",{\"0\":{\"56\":1}}],[\"给定一个\",{\"1\":{\"55\":1}}],[\"构建增广矩阵\",{\"1\":{\"53\":1}}],[\"jordan消元\",{\"1\":{\"53\":1}}],[\"求逆的方法\",{\"1\":{\"53\":1}}],[\"求导\",{\"1\":{\"21\":1}}],[\"追赶法求解三对角矩阵\",{\"1\":{\"53\":1}}],[\"三阶行列式的值\",{\"1\":{\"59\":1}}],[\"三对角矩阵→带状矩阵\",{\"1\":{\"53\":1}}],[\"三角分解之后\",{\"1\":{\"50\":1}}],[\"三角形方程的解法\",{\"0\":{\"49\":1}}],[\"拓展\",{\"0\":{\"53\":1}}],[\"5\",{\"0\":{\"53\":1}}],[\"平方根法\",{\"0\":{\"52\":1}}],[\"来确保a的所有顺序主子式均非零\",{\"1\":{\"51\":1}}],[\"通过对比主元与其他元间的大小进而交换对应的行与列\",{\"1\":{\"51\":1}}],[\"通过隐函数和链式法则推导出结果\",{\"1\":{\"23\":1}}],[\"它与一个方阵相关联\",{\"1\":{\"55\":1}}],[\"它在每一次gauss消去之后\",{\"1\":{\"51\":1}}],[\"它们具有一些非常有用的性质和结论\",{\"1\":{\"6\":1}}],[\"选主元消去是建立在gauss消元法的基础上的\",{\"1\":{\"51\":1}}],[\"选主元消去\",{\"1\":{\"51\":1}}],[\"选主元三角分解\",{\"0\":{\"51\":1}}],[\"没有全主元方法中的右端的qi​了\",{\"1\":{\"51\":1}}],[\"然后进行行交换\",{\"1\":{\"51\":1}}],[\"然后计算\",{\"1\":{\"13\":1}}],[\"k2a12​a2n​\",{\"1\":{\"59\":1}}],[\"k1​\",{\"1\":{\"59\":1}}],[\"k≤i≤n\",{\"1\":{\"51\":1}}],[\"k​​⋱​1​​∈rn×n\",{\"1\":{\"50\":1}}],[\"k​1⋮−ln\",{\"1\":{\"50\":1}}],[\"只在当前主元这一列的下方选\",{\"1\":{\"51\":1}}],[\"只有一个全局最小值\",{\"1\":{\"10\":1}}],[\"就有\",{\"1\":{\"59\":1}}],[\"就是多项式的项数\",{\"1\":{\"59\":1}}],[\"就是用相邻对换的方式\",{\"1\":{\"59\":1}}],[\"就是不遗漏\",{\"1\":{\"59\":1}}],[\"就已经选过一轮全主元了\",{\"1\":{\"51\":1}}],[\"就恒为零\",{\"1\":{\"16\":1}}],[\"也对应了一个逆序数\",{\"1\":{\"59\":1}}],[\"也是从第一步消元前就先选了一轮了\",{\"1\":{\"51\":1}}],[\"也就是说\",{\"1\":{\"51\":2}}],[\"也必须等于\",{\"1\":{\"16\":1}}],[\"qi​均为置换矩阵\",{\"1\":{\"51\":1}}],[\"quad\",{\"1\":{\"59\":1}}],[\"quad3\",{\"1\":{\"59\":1}}],[\"quad1\",{\"1\":{\"59\":1}}],[\"quotelibrary\",{\"1\":{\"39\":1}}],[\"quote\",{\"1\":{\"0\":1,\"34\":1,\"39\":2,\"59\":1}}],[\"questionlibrary\",{\"1\":{\"39\":1}}],[\"question\",{\"1\":{\"0\":1,\"33\":1,\"39\":2,\"59\":1}}],[\"则行列式＝0\",{\"1\":{\"56\":1}}],[\"则a=lu\",{\"1\":{\"50\":1}}],[\"则用g\",{\"1\":{\"13\":1}}],[\"令l=\",{\"1\":{\"50\":1}}],[\"矩阵a的三角分解\",{\"1\":{\"50\":1}}],[\"矩阵的平方根\",{\"1\":{\"8\":1}}],[\"⋯\",{\"1\":{\"50\":2}}],[\"消元法\",{\"0\":{\"50\":1}}],[\"回代法\",{\"1\":{\"49\":1}}],[\"上三角形\",{\"1\":{\"49\":1}}],[\"重复以上步骤直至解出x\",{\"1\":{\"49\":2}}],[\"再将xn​代入倒数第二行\",{\"1\":{\"49\":1}}],[\"再将x1​代入第二行\",{\"1\":{\"49\":1}}],[\"再与\",{\"1\":{\"7\":1}}],[\"82\",{\"1\":{\"45\":1}}],[\"例题\",{\"1\":{\"45\":1}}],[\"other\",{\"1\":{\"45\":1,\"46\":1}}],[\"公式\",{\"1\":{\"44\":1,\"59\":1}}],[\"定义\",{\"1\":{\"41\":1,\"42\":1,\"43\":1,\"59\":1}}],[\"end\",{\"1\":{\"59\":6}}],[\"error\",{\"1\":{\"39\":1}}],[\"examplelibrary\",{\"1\":{\"39\":1}}],[\"example\",{\"1\":{\"0\":1,\"3\":1,\"29\":1,\"39\":2,\"41\":1,\"43\":1}}],[\"exercise\",{\"1\":{\"0\":1}}],[\"important\",{\"1\":{\"39\":1}}],[\"infolibrary\",{\"1\":{\"39\":1}}],[\"info\",{\"1\":{\"0\":1,\"31\":1,\"39\":2}}],[\">\",{\"1\":{\"39\":26}}],[\"更多\",{\"0\":{\"39\":1}}],[\"sc\",{\"1\":{\"45\":1}}],[\"science\",{\"1\":{\"39\":14}}],[\"summary\",{\"1\":{\"39\":1}}],[\"successlibrary\",{\"1\":{\"39\":1}}],[\"success\",{\"1\":{\"35\":1,\"39\":2}}],[\"sort\",{\"1\":{\"24\":1,\"44\":1,\"45\":1}}],[\"c⋅​x11​x21​​x12​x22​​​=​c⋅x11​c⋅x21​​x12​x22​​​\",{\"1\":{\"56\":1}}],[\"courant分解\",{\"1\":{\"53\":1}}],[\"contains\",{\"1\":{\"24\":2,\"45\":1,\"46\":2,\"47\":1,\"54\":1}}],[\"callouts\",{\"0\":{\"63\":1},\"1\":{\"39\":28}}],[\"caution\",{\"1\":{\"39\":1}}],[\"cholesky分解\",{\"0\":{\"52\":1}}],[\"ch1\",{\"0\":{\"48\":1}}],[\"check\",{\"1\":{\"39\":1}}],[\"chatgptlibrary\",{\"1\":{\"39\":1}}],[\"chatgpt\",{\"1\":{\"27\":1}}],[\"chapter\",{\"1\":{\"24\":1}}],[\"尤其是在涉及复合函数的情况下\",{\"1\":{\"23\":1}}],[\"时所有的排列情况叫全排列\",{\"1\":{\"59\":1}}],[\"时\",{\"1\":{\"23\":1}}],[\"时的值\",{\"1\":{\"14\":1}}],[\"总结\",{\"0\":{\"23\":1}}],[\"导数\",{\"1\":{\"22\":1}}],[\"404\",{\"1\":{\"60\":1}}],[\"4\",{\"0\":{\"22\":1,\"52\":1}}],[\"−1\",{\"1\":{\"50\":1,\"59\":11}}],[\"−logx​\",{\"1\":{\"21\":1,\"22\":1}}],[\"−z​\",{\"1\":{\"21\":1}}],[\"注意到\",{\"1\":{\"21\":1}}],[\"z⋅xz−1+xz⋅dxdz​⋅ln\",{\"1\":{\"21\":1}}],[\"z=logx​\",{\"1\":{\"21\":2}}],[\"应用隐函数求导法和链式法则\",{\"1\":{\"21\":1}}],[\"将此各项加起来\",{\"1\":{\"59\":1}}],[\"将此方程两边对\",{\"1\":{\"21\":1}}],[\"将全排列\",{\"1\":{\"59\":1}}],[\"将两个矩阵拼起来\",{\"1\":{\"53\":1}}],[\"将这些内容代入方程\",{\"1\":{\"13\":1}}],[\"⟹xz=y\",{\"1\":{\"21\":1}}],[\"考虑对数的定义\",{\"1\":{\"21\":1}}],[\"设定关系并求导\",{\"0\":{\"21\":1}}],[\"3a13​a22​a31​​\",{\"1\":{\"59\":1}}],[\"31\",{\"1\":{\"59\":2}}],[\"32\",{\"1\":{\"59\":2}}],[\"33\",{\"1\":{\"59\":2}}],[\"3\",{\"0\":{\"21\":1,\"51\":1},\"1\":{\"59\":9}}],[\"found\",{\"1\":{\"60\":1}}],[\"folder=this\",{\"1\":{\"47\":1,\"54\":1}}],[\"folder\",{\"1\":{\"24\":2,\"47\":1,\"54\":1}}],[\"from\",{\"1\":{\"44\":1,\"45\":1}}],[\"fail\",{\"1\":{\"39\":1}}],[\"failurelibrary\",{\"1\":{\"39\":1}}],[\"failure\",{\"1\":{\"30\":1,\"39\":2}}],[\"faq\",{\"1\":{\"39\":1}}],[\"file\",{\"1\":{\"24\":3,\"44\":2,\"45\":2,\"46\":2,\"47\":3,\"54\":3}}],[\"f\",{\"1\":{\"20\":1,\"59\":1}}],[\"反函数求导法则指出\",{\"1\":{\"20\":1}}],[\"使用反函数求导法则\",{\"0\":{\"20\":1}}],[\"使得\",{\"1\":{\"8\":1}}],[\"表示以\",{\"1\":{\"19\":1}}],[\"表示如下\",{\"1\":{\"13\":1}}],[\"dataview查询\",{\"0\":{\"65\":1}}],[\"dangerlibrary\",{\"1\":{\"39\":1}}],[\"danger\",{\"1\":{\"28\":1,\"39\":2}}],[\"det\",{\"1\":{\"55\":1}}],[\"definition\",{\"1\":{\"0\":1}}],[\"doolittle分解\",{\"1\":{\"53\":1}}],[\"done\",{\"1\":{\"39\":1}}],[\"dlink\",{\"1\":{\"47\":1,\"54\":1}}],[\"dxdz​=xln\",{\"1\":{\"21\":1}}],[\"dxd​\",{\"1\":{\"21\":1}}],[\"dxd​logx​\",{\"1\":{\"19\":1,\"21\":1,\"22\":2,\"23\":1}}],[\"dyd​f−1\",{\"1\":{\"20\":1}}],[\"计算左边的导数\",{\"1\":{\"21\":1}}],[\"计算\",{\"0\":{\"18\":1}}],[\"非零的情况\",{\"1\":{\"17\":1}}],[\"非恒等于零\",{\"1\":{\"16\":1}}],[\"结论\",{\"0\":{\"17\":1,\"22\":1}}],[\"结果总是正数\",{\"1\":{\"7\":1}}],[\"即对应矩阵不满秩\",{\"1\":{\"56\":1}}],[\"即满足以下关系的函数\",{\"1\":{\"19\":1}}],[\"即\",{\"1\":{\"16\":1}}],[\"即解可能不唯一\",{\"1\":{\"10\":1}}],[\"同样的逻辑也适用于\",{\"1\":{\"16\":1}}],[\"同时假设\",{\"1\":{\"15\":1}}],[\"既然\",{\"1\":{\"16\":1}}],[\"矛盾\",{\"1\":{\"16\":1}}],[\"与题目的条件\",{\"1\":{\"16\":1}}],[\"≡0\",{\"1\":{\"16\":1}}],[\"我们就来计算一下全排列21453的逆序\",{\"1\":{\"59\":1}}],[\"我们得到\",{\"1\":{\"21\":1}}],[\"我们可以表示\",{\"1\":{\"21\":1}}],[\"我们首先考虑\",{\"1\":{\"16\":1}}],[\"我们需要计算\",{\"1\":{\"19\":1}}],[\"我们需要回顾一下边界条件和我们对\",{\"1\":{\"14\":1}}],[\"我们需要考虑的形式是\",{\"1\":{\"14\":1}}],[\"对应了一组\",{\"1\":{\"59\":1}}],[\"对换和逆序数\",{\"0\":{\"59\":1}}],[\"对所有\",{\"1\":{\"16\":2}}],[\"对于2\",{\"1\":{\"55\":1}}],[\"对于所有的\",{\"1\":{\"15\":2}}],[\"对于这样的g\",{\"1\":{\"14\":1}}],[\"推导\",{\"0\":{\"16\":1}}],[\"边界条件是\",{\"1\":{\"15\":1}}],[\"根据题目\",{\"1\":{\"15\":1}}],[\"分析边界条件\",{\"0\":{\"15\":1}}],[\"由上可知\",{\"1\":{\"14\":1}}],[\"由于\",{\"1\":{\"13\":1,\"16\":1}}],[\"否则这是不可行的\",{\"1\":{\"14\":1}}],[\"除此以外\",{\"1\":{\"59\":1}}],[\"除非\",{\"1\":{\"14\":1}}],[\"除以上式\",{\"1\":{\"13\":1}}],[\"必须在这些点为零以满足边界条件\",{\"1\":{\"17\":1}}],[\"必须等于\",{\"1\":{\"16\":1}}],[\"必须为负数\",{\"1\":{\"14\":1}}],[\"必须满足边界条件\",{\"1\":{\"14\":1}}],[\"必须是负值\",{\"1\":{\"14\":1}}],[\"not\",{\"1\":{\"60\":1}}],[\"notelibrary\",{\"1\":{\"39\":1}}],[\"note\",{\"1\":{\"32\":1,\"39\":2}}],[\"n−1\",{\"1\":{\"50\":1}}],[\"null\",{\"1\":{\"46\":1}}],[\"name\",{\"1\":{\"24\":1,\"44\":1,\"45\":2,\"47\":1,\"54\":1}}],[\"n\",{\"1\":{\"14\":1,\"59\":3}}],[\"n×n\",{\"1\":{\"7\":2,\"55\":1}}],[\"matrix\",{\"1\":{\"59\":10}}],[\"math\",{\"1\":{\"39\":14}}],[\"m=n\",{\"1\":{\"59\":1}}],[\"m\",{\"1\":{\"59\":1}}],[\"m≤n\",{\"1\":{\"59\":1}}],[\"missing\",{\"1\":{\"39\":1}}],[\"minx​21​xtax+btx+c\",{\"1\":{\"10\":1}}],[\"mu=2nπ​\",{\"1\":{\"14\":1}}],[\"和\",{\"1\":{\"14\":2,\"17\":1}}],[\"和g\",{\"1\":{\"13\":1}}],[\"+bsin\",{\"1\":{\"14\":1}}],[\"+g\",{\"1\":{\"13\":1}}],[\"μx\",{\"1\":{\"14\":2}}],[\"μ>0\",{\"1\":{\"14\":1}}],[\"让\",{\"1\":{\"14\":1}}],[\"让我详细解释一下它们的定义\",{\"1\":{\"6\":1}}],[\"因此需要交换顺序\",{\"1\":{\"59\":1}}],[\"因此\",{\"1\":{\"14\":1,\"22\":1}}],[\"因为最后一行只有ann​=0\",{\"1\":{\"49\":1}}],[\"因为第一行只有a11​=0\",{\"1\":{\"49\":1}}],[\"因为\",{\"1\":{\"14\":1}}],[\"为\",{\"1\":{\"21\":1}}],[\"为底\",{\"1\":{\"19\":1}}],[\"为了解释为什么可以从\",{\"1\":{\"14\":1}}],[\"为负数\",{\"1\":{\"14\":1}}],[\"为整数\",{\"1\":{\"14\":1}}],[\"为正值\",{\"1\":{\"14\":1}}],[\"为零\",{\"1\":{\"7\":1}}],[\"其结果就是\",{\"1\":{\"59\":1}}],[\"其中pi​\",{\"1\":{\"51\":1}}],[\"其中l是下三角矩阵\",{\"1\":{\"50\":1}}],[\"其中\",{\"1\":{\"14\":2,\"19\":1}}],[\"其形式与特征值问题中经常出现的形式相同\",{\"1\":{\"14\":1}}],[\"其逆矩阵也是正定的\",{\"1\":{\"8\":1}}],[\"=0\",{\"1\":{\"14\":1}}],[\"有一个非三维解\",{\"1\":{\"14\":1}}],[\"有唯一解\",{\"1\":{\"8\":1}}],[\"所以先解出xn​\",{\"1\":{\"49\":1}}],[\"所以先解出x1​\",{\"1\":{\"49\":1}}],[\"所以\",{\"1\":{\"16\":1}}],[\"所以考虑\",{\"1\":{\"14\":1}}],[\"所以两边作为\",{\"1\":{\"13\":1}}],[\"2a13​a21​a32​\",{\"1\":{\"59\":1}}],[\"2a12​a23​a31​\",{\"1\":{\"59\":1}}],[\"21\",{\"1\":{\"59\":2}}],[\"21453⟹\",{\"1\":{\"59\":1}}],[\"21453⟹a12​a21​a34​a45​a53​\",{\"1\":{\"59\":2}}],[\"23\",{\"1\":{\"59\":2}}],[\"22\",{\"1\":{\"59\":2}}],[\"2p1​​1p2​​4p3​​5p4​​3p5​​\",{\"1\":{\"59\":1}}],[\"2的方阵\",{\"1\":{\"55\":1}}],[\"2\",{\"0\":{\"20\":1,\"50\":1},\"1\":{\"14\":3,\"15\":1,\"16\":3,\"59\":8}}],[\"0a11​a22​a33​\",{\"1\":{\"59\":2}}],[\"0≤y≤3\",{\"1\":{\"15\":2}}],[\"0\",{\"1\":{\"14\":3,\"15\":1,\"16\":6,\"50\":2,\"59\":1}}],[\"满足边界条件\",{\"1\":{\"14\":1}}],[\"符号的证明\",{\"0\":{\"14\":1}}],[\"λ=−μ2\",{\"1\":{\"14\":1}}],[\"λ<0\",{\"1\":{\"14\":1}}],[\"λ\",{\"1\":{\"13\":1,\"14\":4}}],[\"并用于描述该方阵的一些性质\",{\"1\":{\"55\":1}}],[\"并且\",{\"1\":{\"20\":1}}],[\"并且可以用常数\",{\"1\":{\"13\":1}}],[\"并推理出\",{\"1\":{\"17\":1}}],[\"并将其代入原方程\",{\"1\":{\"13\":1}}],[\"或|a|\",{\"1\":{\"55\":1}}],[\"或者更多点\",{\"1\":{\"16\":1}}],[\"或\",{\"1\":{\"13\":1}}],[\"成立\",{\"1\":{\"13\":1,\"16\":2}}],[\"​+⋯+\",{\"1\":{\"59\":1}}],[\"​+h\",{\"1\":{\"13\":1}}],[\"​a11​a22​\",{\"1\":{\"59\":1}}],[\"​a1n​a2n​⋮ann​​​=∑\",{\"1\":{\"59\":1}}],[\"​x11​x21​x31​​x12​x22​x32​​x13​x23​x33​​​=x11​​x22​x32​​x23​x33​​​−x12​​x21​x31​​x23​x33​​​+x13​​x21​x31​​x22​x32​​​\",{\"1\":{\"56\":1}}],[\"​x11​x21​​x12​x22​​​=​x11​x21​​c⋅x11​c⋅x21​​​=0\",{\"1\":{\"56\":1}}],[\"​x11​x21​​x12​x22​​​=​x11​x21​​x11​+x12​x21​+x22​​​\",{\"1\":{\"56\":1}}],[\"​x11​x21​​x12​x22​​​=−​x21​x11​​x22​x12​​​\",{\"1\":{\"56\":1}}],[\"​x11​+ax21​+c​x12​+bx22​+d​​=​x11​x21​​x12​x22​​​+​ac​x12​x22​​​+​x11​x21​​bd​​+​ac​bd​​\",{\"1\":{\"56\":1}}],[\"​\",{\"1\":{\"13\":1,\"21\":1,\"22\":1}}],[\"​=−λ\",{\"1\":{\"13\":1}}],[\"​=−h\",{\"1\":{\"13\":1}}],[\"​=λ\",{\"1\":{\"13\":1}}],[\"​=0\",{\"1\":{\"13\":1}}],[\"都不为零\",{\"1\":{\"13\":1}}],[\"都有\",{\"1\":{\"7\":2}}],[\"gathered\",{\"1\":{\"59\":2}}],[\"gauss\",{\"1\":{\"53\":1}}],[\"gauss变换可以看作一个算子\",{\"1\":{\"50\":1}}],[\"gauss变换\",{\"1\":{\"50\":1}}],[\"gauss变换的形式\",{\"1\":{\"50\":1}}],[\"g\",{\"1\":{\"13\":7,\"14\":8,\"16\":2,\"17\":2}}],[\"可由前一项规则加减自己推导得到\",{\"1\":{\"56\":1}}],[\"可以看到\",{\"1\":{\"59\":1}}],[\"可以将a的第k列转化为\",{\"1\":{\"50\":1}}],[\"可以有效地使用反函数求导法则\",{\"1\":{\"23\":1}}],[\"可以表示为\",{\"1\":{\"22\":1}}],[\"可以得到\",{\"1\":{\"13\":1}}],[\"可能有无穷多解\",{\"1\":{\"9\":1}}],[\"可能的多解性\",{\"1\":{\"9\":1}}],[\"∂y2∂2u​=g\",{\"1\":{\"13\":1}}],[\"∂x2∂2u​=g\",{\"1\":{\"13\":1}}],[\"help\",{\"1\":{\"39\":1}}],[\"hint\",{\"1\":{\"39\":1}}],[\"h\",{\"1\":{\"13\":10,\"14\":1,\"15\":1,\"16\":5,\"17\":2}}],[\"home\",{\"1\":{\"3\":1}}],[\"=1\",{\"1\":{\"59\":1}}],[\"=n\",{\"1\":{\"59\":1}}],[\"=​ac​bd​​=ad−bc\",{\"1\":{\"55\":1}}],[\"=\",{\"1\":{\"46\":1}}],[\"=xln\",{\"1\":{\"21\":1,\"22\":1}}],[\"=−z⋅xz−1\",{\"1\":{\"21\":1}}],[\"=dxd​\",{\"1\":{\"21\":1}}],[\"=f\",{\"1\":{\"20\":1}}],[\"=z当且仅当xz=y\",{\"1\":{\"19\":1}}],[\"=acos\",{\"1\":{\"14\":1}}],[\"=λg\",{\"1\":{\"14\":1}}],[\"=u\",{\"1\":{\"14\":1}}],[\"=0\",{\"1\":{\"13\":1,\"14\":4,\"15\":2,\"16\":3,\"21\":1}}],[\"=g\",{\"1\":{\"13\":1,\"14\":2,\"15\":1,\"16\":2,\"17\":1}}],[\"=21​xtwtwx−xtwtb+const\",{\"1\":{\"8\":1}}],[\"y=f\",{\"1\":{\"20\":1}}],[\"y\",{\"1\":{\"13\":15,\"14\":6,\"15\":4,\"16\":12,\"17\":4,\"19\":4,\"20\":3,\"21\":6,\"22\":3,\"23\":1}}],[\"u=ln−1​pn−1​ln−2​pn−2​⋯l1​p1​aq1​⋯qn−1​\",{\"1\":{\"51\":1}}],[\"u=a\",{\"1\":{\"50\":1}}],[\"ux=y\",{\"1\":{\"50\":1}}],[\"u是上三角矩阵\",{\"1\":{\"50\":1}}],[\"u\",{\"1\":{\"13\":2,\"14\":4,\"15\":3,\"16\":5,\"17\":2}}],[\"中选出绝对值最大的一个\",{\"1\":{\"51\":1}}],[\"中的偏微分方程为\",{\"1\":{\"13\":1}}],[\"中广泛应用\",{\"1\":{\"11\":1}}],[\"假设方程\",{\"1\":{\"13\":1}}],[\"基于问题假设的分析\",{\"0\":{\"13\":1}}],[\"基于obsidian建立个人的数学知识库\",{\"1\":{\"2\":1}}],[\"1a12​a21​a33​$−1\",{\"1\":{\"59\":1}}],[\"1a11​a23​a32​\",{\"1\":{\"59\":1}}],[\"13\",{\"1\":{\"59\":2}}],[\"123三个数的全排列\",{\"1\":{\"59\":1}}],[\"123⟹\",{\"1\":{\"59\":1}}],[\"12\",{\"1\":{\"59\":2}}],[\"11\",{\"1\":{\"59\":2}}],[\"1进行比较\",{\"1\":{\"59\":1}}],[\"1​其中x=f−1\",{\"1\":{\"20\":1}}],[\"1\",{\"0\":{\"12\":1,\"19\":1,\"49\":2,\"50\":1,\"51\":1,\"52\":1,\"53\":1},\"1\":{\"13\":2,\"59\":16}}],[\"问题分析\",{\"0\":{\"19\":1}}],[\"问题\",{\"0\":{\"12\":1}}],[\"优化问题的最小值以及特征值问题中\",{\"1\":{\"11\":1}}],[\"正是因为这些性质\",{\"1\":{\"11\":1}}],[\"正定和半正定矩阵的概念非常重要\",{\"1\":{\"11\":1}}],[\"正定和半正定矩阵的性质决定了目标函数的形状和解的唯一性\",{\"1\":{\"10\":1}}],[\"正定矩阵的作用\",{\"1\":{\"10\":1}}],[\"正定矩阵的所有特征值都是正数\",{\"1\":{\"8\":1}}],[\"正定矩阵的性质\",{\"0\":{\"8\":1}}],[\"正定矩阵\",{\"1\":{\"7\":1,\"11\":1}}],[\"正定矩阵与半正定矩阵的定义\",{\"0\":{\"7\":1}}],[\"正定矩阵和半正定矩阵是线性代数和优化中的重要概念\",{\"1\":{\"6\":1}}],[\"线性方程组的直接解法\",{\"0\":{\"48\":1}}],[\"线性回归\",{\"1\":{\"11\":1}}],[\"线性代数\",{\"0\":{\"62\":1},\"1\":{\"3\":1}}],[\"机器学习\",{\"1\":{\"11\":1}}],[\"稳定性分析\",{\"1\":{\"11\":1}}],[\"保证凸性\",{\"1\":{\"11\":1}}],[\"确保唯一解和严格凸性\",{\"1\":{\"11\":1}}],[\"小结\",{\"0\":{\"11\":1}}],[\"但解可能不唯一\",{\"1\":{\"11\":1}}],[\"但可能存在平坦区域\",{\"1\":{\"10\":1}}],[\"但它不能为负数\",{\"1\":{\"7\":1}}],[\"如现在主元是akk​\",{\"1\":{\"51\":1}}],[\"如支持向量机\",{\"1\":{\"11\":1}}],[\"如\",{\"1\":{\"10\":1}}],[\"如果h\",{\"1\":{\"13\":1}}],[\"如果矩阵是半正定但不是正定的\",{\"1\":{\"9\":1}}],[\"如果二次型的系数矩阵是正定的\",{\"1\":{\"8\":1}}],[\"如果\",{\"1\":{\"8\":3,\"9\":1,\"10\":2,\"14\":1,\"16\":1,\"20\":1}}],[\"如果对于所有向量\",{\"1\":{\"7\":1}}],[\"如果对于所有非零向量\",{\"1\":{\"7\":1}}],[\"实际问题中的应用\",{\"0\":{\"10\":1}}],[\"且可能出现在一个子空间上\",{\"1\":{\"9\":1}}],[\"最小值可能不唯一\",{\"1\":{\"9\":1}}],[\"最优化中的应用\",{\"1\":{\"8\":1,\"9\":1}}],[\"在计算\",{\"1\":{\"23\":1}}],[\"在其定义域内可微且严格单调\",{\"1\":{\"20\":1}}],[\"在特定位置\",{\"1\":{\"17\":1}}],[\"在至少一点\",{\"1\":{\"16\":1}}],[\"在\",{\"1\":{\"14\":1}}],[\"在这里\",{\"1\":{\"13\":1}}],[\"在线性方程组的解\",{\"1\":{\"11\":1}}],[\"在二次型最优化问题中\",{\"1\":{\"10\":1}}],[\"在二次型最小化问题中\",{\"1\":{\"8\":1}}],[\"在优化问题中\",{\"1\":{\"10\":1}}],[\"在最小化一个以半正定矩阵为系数的二次型函数时\",{\"1\":{\"9\":1}}],[\"不重复的将所有数字排在一起\",{\"1\":{\"59\":1}}],[\"不全为0也可以用哦\",{\"1\":{\"56\":1}}],[\"不需要开方运算\",{\"1\":{\"52\":1}}],[\"不为零\",{\"1\":{\"16\":1}}],[\"不恒等于零\",{\"1\":{\"16\":1}}],[\"不满足边界条件\",{\"1\":{\"14\":1}}],[\"不是满秩的情况\",{\"1\":{\"9\":1}}],[\"不存在零特征值\",{\"1\":{\"8\":1}}],[\"当\",{\"1\":{\"9\":1,\"59\":1}}],[\"是数字1\",{\"1\":{\"59\":1}}],[\"是半正定矩阵\",{\"1\":{\"10\":1}}],[\"是半正定的\",{\"1\":{\"9\":1}}],[\"是正定矩阵\",{\"1\":{\"8\":1,\"10\":1}}],[\"是正定的\",{\"1\":{\"8\":2}}],[\"where\",{\"1\":{\"24\":1,\"45\":1,\"46\":1,\"47\":1,\"54\":1}}],[\"wtw\",{\"1\":{\"8\":1}}],[\"warning\",{\"1\":{\"0\":1,\"38\":1,\"39\":3}}],[\"longrightarrow\",{\"1\":{\"59\":6}}],[\"logx​\",{\"1\":{\"19\":2,\"21\":1}}],[\"left\",{\"1\":{\"59\":1}}],[\"lemma\",{\"1\":{\"0\":1}}],[\"ltx=y\",{\"1\":{\"52\":1}}],[\"ln−1​ln−2​⋯l1​\",{\"1\":{\"50\":1}}],[\"lk​=​1​⋱​1−lk+1\",{\"1\":{\"50\":1}}],[\"li​为gauss变换\",{\"1\":{\"51\":1}}],[\"link\",{\"1\":{\"47\":1,\"54\":1}}],[\"library\",{\"1\":{\"39\":1}}],[\"list\",{\"1\":{\"24\":1,\"44\":1,\"46\":1,\"47\":1,\"54\":1}}],[\"l\",{\"1\":{\"8\":1}}],[\"具体到问题中的损失函数\",{\"1\":{\"8\":1}}],[\"的一个全排列\",{\"1\":{\"59\":1}}],[\"的方阵a\",{\"1\":{\"55\":1}}],[\"的导数为\",{\"1\":{\"20\":1}}],[\"的对数\",{\"1\":{\"19\":1}}],[\"的边界条件得到\",{\"1\":{\"17\":1}}],[\"的边界条件推导出\",{\"1\":{\"14\":1}}],[\"的情况\",{\"1\":{\"16\":1}}],[\"的值\",{\"0\":{\"16\":1},\"1\":{\"17\":1}}],[\"的假设\",{\"1\":{\"14\":1,\"17\":1}}],[\"的解是指数递增或递减函数\",{\"1\":{\"14\":1}}],[\"的函数\",{\"1\":{\"14\":1}}],[\"的函数都是独立的\",{\"1\":{\"13\":1}}],[\"的偏导数\",{\"1\":{\"13\":1}}],[\"的答案\",{\"0\":{\"12\":1}}],[\"的平方根\",{\"1\":{\"8\":1}}],[\"的实对称矩阵\",{\"1\":{\"7\":2}}],[\"称为\",{\"1\":{\"8\":1}}],[\"begin\",{\"1\":{\"59\":6}}],[\"buglibrary\",{\"1\":{\"39\":1}}],[\"bug\",{\"1\":{\"26\":1,\"39\":2}}],[\"b2=a\",{\"1\":{\"8\":1}}],[\"b\",{\"1\":{\"8\":2}}],[\"那么就是从\",{\"1\":{\"51\":1}}],[\"那么其反函数\",{\"1\":{\"20\":1}}],[\"那么要使\",{\"1\":{\"16\":1}}],[\"那么\",{\"1\":{\"16\":1}}],[\"那么目标函数是凸的\",{\"1\":{\"10\":1}}],[\"那么目标函数是一个严格凸函数\",{\"1\":{\"10\":1}}],[\"那么目标函数具有唯一的最小值\",{\"1\":{\"8\":1}}],[\"那么该损失函数具有唯一的最小值\",{\"1\":{\"8\":1}}],[\"那么存在一个唯一的正定矩阵\",{\"1\":{\"8\":1}}],[\"那么线性方程组\",{\"1\":{\"8\":1,\"9\":1}}],[\"特征值\",{\"1\":{\"8\":1,\"9\":1}}],[\"特别是在最优化问题中\",{\"1\":{\"6\":1}}],[\"唯一性\",{\"1\":{\"8\":1}}],[\"被称为半正定矩阵\",{\"1\":{\"7\":1}}],[\"被称为正定矩阵\",{\"1\":{\"7\":1}}],[\"半正定矩阵的作用\",{\"1\":{\"10\":1}}],[\"半正定矩阵的特征值是非负的\",{\"1\":{\"9\":1}}],[\"半正定矩阵的性质\",{\"0\":{\"9\":1}}],[\"半正定矩阵的所有特征值都是非负数\",{\"1\":{\"8\":1}}],[\"半正定矩阵\",{\"1\":{\"7\":1,\"11\":1}}],[\"内积\",{\"1\":{\"7\":1}}],[\"后\",{\"1\":{\"7\":1}}],[\"乘以\",{\"1\":{\"7\":1}}],[\"这一方法对多步计算特别有用\",{\"1\":{\"23\":1}}],[\"这种方法有效是因为我们考虑了\",{\"1\":{\"17\":1}}],[\"这样我们就可以根据\",{\"1\":{\"17\":1}}],[\"这些性质在优化问题\",{\"1\":{\"11\":1}}],[\"这些区域会导致多个最小值\",{\"1\":{\"10\":1}}],[\"这意味着\",{\"1\":{\"14\":1}}],[\"这意味着它的最小特征值是零或正数\",{\"1\":{\"9\":1}}],[\"这意味着任何非零向量\",{\"1\":{\"7\":1}}],[\"这个矩阵\",{\"1\":{\"8\":1}}],[\"这是因为正定矩阵总是可逆的\",{\"1\":{\"8\":1}}],[\"这是一个信息\",{\"1\":{\"0\":1}}],[\"这是一个引用\",{\"1\":{\"0\":1}}],[\"这是一个提示\",{\"1\":{\"0\":1}}],[\"这是一个警告\",{\"1\":{\"0\":1}}],[\"这是一个例子\",{\"1\":{\"0\":1}}],[\"这是一个问题\",{\"1\":{\"0\":1}}],[\"这里允许\",{\"1\":{\"7\":1}}],[\"x1n​\",{\"1\":{\"56\":1}}],[\"x1​\",{\"1\":{\"50\":1}}],[\"xk​\",{\"1\":{\"50\":1}}],[\"x2​\",{\"1\":{\"50\":1}}],[\"xz⋅dxdz​⋅ln\",{\"1\":{\"21\":1}}],[\"xz\",{\"1\":{\"21\":1}}],[\"x=f−1\",{\"1\":{\"20\":1}}],[\"x=2\",{\"1\":{\"14\":1,\"16\":1,\"17\":1}}],[\"x=0\",{\"1\":{\"14\":1,\"17\":1}}],[\"xtax\",{\"1\":{\"7\":1}}],[\"xtax≥0\",{\"1\":{\"7\":1}}],[\"xtax>0\",{\"1\":{\"7\":1}}],[\"x\",{\"1\":{\"7\":2,\"8\":1,\"13\":15,\"14\":12,\"15\":2,\"16\":2,\"17\":5,\"19\":1,\"20\":2,\"21\":5,\"22\":1,\"55\":1}}],[\"x∈rn\",{\"1\":{\"7\":2}}],[\"a1p1​​a2p2​​a3p3​​\",{\"1\":{\"59\":1}}],[\"an1​​​\",{\"1\":{\"59\":1}}],[\"ann​​\",{\"1\":{\"59\":1}}],[\"anpn​​=\",{\"1\":{\"59\":1}}],[\"and\",{\"1\":{\"24\":1,\"46\":2,\"47\":1,\"54\":1}}],[\"ac​bd​\",{\"1\":{\"55\":1}}],[\"a=\",{\"1\":{\"55\":1}}],[\"a=ldlt\",{\"1\":{\"52\":1}}],[\"a=0\",{\"1\":{\"14\":1}}],[\"aik​\",{\"1\":{\"51\":1}}],[\"author\",{\"1\":{\"46\":1}}],[\"assets\",{\"0\":{\"61\":1},\"1\":{\"39\":14,\"46\":1}}],[\"alias\",{\"1\":{\"39\":1}}],[\"aliases\",{\"1\":{\"39\":6}}],[\"attention\",{\"1\":{\"39\":1}}],[\"abstractlibrary\",{\"1\":{\"39\":1}}],[\"abstract\",{\"1\":{\"25\":1,\"39\":2}}],[\"ax=b→a=llt→lltx=b→ly=b\",{\"1\":{\"52\":1}}],[\"ax=b→lux=b→ly=b\",{\"1\":{\"50\":1}}],[\"ax=b\",{\"0\":{\"48\":1},\"1\":{\"8\":1,\"9\":1}}],[\"a\",{\"1\":{\"7\":3,\"8\":3,\"9\":2,\"10\":2,\"55\":2,\"59\":12}}],[\"行列式性质\",{\"1\":{\"57\":1}}],[\"行列式的定义可以通过递归地将方阵拆分为更小的子方阵来得到\",{\"1\":{\"55\":1}}],[\"行列式可以表示为det\",{\"1\":{\"55\":1}}],[\"行列式是一个数\",{\"1\":{\"55\":1}}],[\"行列式\",{\"0\":{\"59\":1,\"67\":1},\"1\":{\"3\":1,\"55\":1}}],[\"笔记示例\",{\"1\":{\"3\":1}}],[\"本地obsidian仓库专用\",{\"1\":{\"3\":1}}],[\"目录\",{\"0\":{\"3\":1,\"24\":1,\"47\":1,\"54\":1}}],[\"简介\",{\"0\":{\"2\":1}}],[\"template\",{\"0\":{\"64\":1}}],[\"t=3\",{\"1\":{\"59\":1}}],[\"t=2\",{\"1\":{\"59\":2}}],[\"t=1\",{\"1\":{\"59\":2}}],[\"t=0\",{\"1\":{\"59\":1}}],[\"ta12​a21​a34​a45​a53​\",{\"1\":{\"59\":1}}],[\"ta1p1​​a2p2​​\",{\"1\":{\"59\":1}}],[\"ta1p1​​a2p2​​⋯anpn​​\",{\"1\":{\"59\":1}}],[\"table\",{\"1\":{\"45\":1}}],[\"t\",{\"1\":{\"50\":1}}],[\"tldr\",{\"1\":{\"39\":1}}],[\"this\",{\"1\":{\"24\":1,\"47\":1,\"54\":1}}],[\"theorem\",{\"1\":{\"0\":1}}],[\"tipslibrary\",{\"1\":{\"39\":1}}],[\"tip\",{\"1\":{\"0\":1,\"36\":1,\"39\":2}}],[\"todolibrary\",{\"1\":{\"39\":1}}],[\"todo\",{\"1\":{\"0\":1,\"37\":1,\"39\":2}}]],\"version\":2}}")).map(([e,t])=>[e,Mt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=St[s];e==="suggest"?self.postMessage([e,o,et(t,r,n)]):e==="search"?self.postMessage([e,o,tt(t,r,n)]):self.postMessage({suggestions:[e,o,et(t,r,n)],results:[e,o,tt(t,r,n)]})};
//# sourceMappingURL=index.js.map
